services:
  db:
    init: false
    container_name: cat_db
    env_file:
      - config/.env.local
    environment:
      - MYSQL_USER=mysql
      - PUID=100
      - PGID=101
      - TEMP_DIR=/tmp/migration_temp
    pull_policy: missing
    image: db
    build:
      context: .
      dockerfile: docker/mariadb/Dockerfile
    networks:
      - discord-network
    user: "100:101"  # mysql:mysql
    security_opt:
      - no-new-privileges:true
    privileged: false
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/db/migrations:/var/lib/dbinit/migrations:ro
    tmpfs:
      - /tmp:rw,size=100m,uid=100,gid=101
      - /var/tmp:rw,size=50m,uid=100,gid=101
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: dev_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - discord-network
    env_file:
      - config/.env.local
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Mystery Place Voice Chat Signal Server (Cloudflare Realtime SFU + TURN)
  signal-server:
    container_name: signal_server_local
    build:
      context: docker/signal-server
      dockerfile: Dockerfile
    env_file:
      - config/.env.local
    environment:
      - NODE_ENV=development
      - SIGNAL_PORT=4000
      - FRONTEND_URL=http://localhost:5173
      - BACKEND_URL=${SIGNAL_BACKEND_URL}
      - REDIS_URL=redis://dev_redis:6379
      - REDIS_HOST=${SIGNAL_REDIS_HOST:-dev_redis}
      - REDIS_PORT=${SIGNAL_REDIS_PORT:-6379}
      - JWT_SECRET=${JWT_SECRET}
      # Cloudflare Realtime SFU 설정
      - CF_ACCOUNT_ID=${CF_ACCOUNT_ID}
      - CF_REALTIME_APP_ID=${CF_REALTIME_APP_ID}
      - CF_REALTIME_API_TOKEN=${CF_REALTIME_API_TOKEN}
      - CF_REALTIME_BASE_URL=${CF_REALTIME_BASE_URL}
      # Cloudflare TURN 서버 설정 (로컬 TURN 완전 대체)
      - CF_TURN_KEY_ID=${CF_TURN_KEY_ID}
      - CF_TURN_API_TOKEN=${CF_TURN_API_TOKEN}
      - CF_TURN_BASE_URL=${CF_TURN_BASE_URL}
    ports:
      - "4000:4000"
    networks:
      - discord-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 로컬 TURN 서버 완전 제거 - Cloudflare TURN 서버로 완전 대체
  # turn-server:
  #   container_name: turn_server_local
  #   # 더 이상 사용하지 않음 - Cloudflare TURN 서버 사용

networks:
  discord-network:
    driver: bridge

volumes:
  mariadb_data:
  image_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/images
  audio_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/uploads/audio