# 🔥 nginx 설정 파일

# 기본 전역 설정
user nginx;
worker_processes auto;
pcre_jit on;
error_log /var/log/nginx/error.log warn;

include /etc/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;
    client_max_body_size 1m;
    sendfile on;
    tcp_nopush on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:2m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;
    gzip_vary on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # 로그 포맷 정의 (Authorization 헤더까지 포함)
    log_format with_auth '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$request_method" "$request_uri" '
                         '"Authorization: $http_authorization"';

    access_log /var/log/nginx/access.log with_auth;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/http.d/*.conf;

    # --- 서버 블록 시작 ---

    # 1. 80 포트: HTTP → HTTPS 리디렉션
    server {
        listen 80;
        server_name crimecat.org www.crimecat.org dev.crimecat.org ai.crimecat.org;
        return 301 https://$host$request_uri;
    }

    # 2. 메인 서버 crimecat.org, www.crimecat.org
    server {
        listen 443 ssl;
        server_name crimecat.org www.crimecat.org;

        ssl_certificate     /etc/nginx/certs/cloudflare-cert.pem;
        ssl_certificate_key /etc/nginx/certs/cloudflare-key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        root /usr/share/nginx/html;
        index index.html;

        # /login 별도 처리
        location = /login {
            try_files $uri /index.html;
        }

        # 📌 백엔드 API 라우팅
        location ^~ /api/ {
            proxy_pass http://spring-backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
        }

        location ^~ /oauth2/ {
            proxy_pass http://spring-backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
        }

        location ^~ /login/ {
            proxy_pass http://spring-backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
        }

        # 📌 /bot/v1/ API 특별 처리
        location ^~ /bot/v1/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type "text/plain; charset=UTF-8";
                return 204;
            }

            proxy_pass http://spring-backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # 📌 그 외 요청은 프론트엔드
        location / {
            try_files $uri /index.html;
        }

        error_page 404 /index.html;
    }

    # 3. dev.crimecat.org - 개발용 서버
    server {
        listen 443 ssl;
        server_name dev.crimecat.org;

        ssl_certificate     /etc/nginx/certs/cloudflare-cert.pem;
        ssl_certificate_key /etc/nginx/certs/cloudflare-key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://192.168.0.42:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 4. ai.crimecat.org - AI 서비스 서버
    server {
        listen 443 ssl;
        server_name ai.crimecat.org;

        ssl_certificate     /etc/nginx/certs/cloudflare-cert.pem;
        ssl_certificate_key /etc/nginx/certs/cloudflare-key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://192.168.0.42:3300;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
