plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.crimecat'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.3'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB Driver
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.3.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	// Thymeleaf Security Extras
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

	// Nullable 지원
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'

	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation("org.openapitools:jackson-databind-nullable:0.2.4")
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation("org.springframework.boot:spring-boot-starter-validation:3.4.3")

	//security java spring
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON parsing을 위해 필요
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//webclient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// iCal parsing
	implementation 'org.mnode.ical4j:ical4j:3.2.14'

	//jsonMappingTool
	implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

	//caffeine
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	
	// JCache (JSR-107) 지원 - Hibernate 2차 캐시용
	implementation 'org.hibernate:hibernate-jcache:6.6.8.Final'
	implementation 'org.ehcache:ehcache:3.10.8'

	// Mail support
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// Thymeleaf template engine
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	
	// Handlebars for notification templates
	implementation 'com.github.jknack:handlebars:4.4.0'

	//second chash
	implementation 'org.hibernate:hibernate-jcache:6.6.8.Final'
	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'org.ehcache:ehcache:3.10.8'
}

// CacheNames 상수 클래스 자동 생성 태스크
task generateCacheNames {
	doLast {
		def enumFile = file('src/main/java/com/crimecat/backend/config/CaffeineCacheType.java')
		def targetFile = file('src/main/java/com/crimecat/backend/config/CacheNames.java')

		if (!enumFile.exists()) {
			throw new GradleException("CaffeineCacheType.java not found")
		}

		def enumContent = enumFile.text
		def constants = []

		// enum 상수 추출 (정규식 패턴) - 대문자로 시작하는 enum 상수만
		def pattern = /\s+([A-Z_][A-Z_0-9]*)\s*\(\s*"([^"]+)"/
		enumContent.findAll(pattern) { match ->
			constants << [name: match[1], value: match[2]]
		}

		// CacheNames 클래스 생성
		def content = """package com.crimecat.backend.config;

/**
 * 자동 생성된 캐시 이름 상수 클래스
 * CaffeineCacheType enum으로부터 생성됨
 *
 * ⚠️  수정하지 마세요 - 빌드 시 자동 재생성됩니다
 *
 * Generated by: Gradle generateCacheNames task
 * Source: CaffeineCacheType.java
 */
public final class CacheNames {

"""
		constants.each { constant ->
			content += "    public static final String ${constant.name} = \"${constant.value}\";\n"
		}

		content += """
    private CacheNames() {
        throw new UnsupportedOperationException("This is a utility class and cannot be instantiated");
    }
}
"""

		targetFile.parentFile.mkdirs()
		targetFile.text = content

		println "Generated CacheNames.java with ${constants.size()} constants"
	}
}

// compileJava가 실행되기 전에 CacheNames 생성
compileJava.dependsOn generateCacheNames

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyMainConfig', Copy) {
	from '../../config'
	include '*.yml'
	into 'src/main/resources'
}

tasks.named('processResources') {
	dependsOn 'copyMainConfig'
}

jar {
	enabled = false
}
